{"version":3,"sources":["components/header.js","components/footer.js","components/home.js","lib/select-weighted-ayja-holder.js","components/domains.js","components/contact.js","lib/crypto-util.js","lib/dkms.js","components/profile.js","components/connectWallet.js","components/createAccount.js","components/settings.js","components/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","class","Footer","style","marginTop","href","withRouter","width","to","selectWeightedAyjaHolder","accounts","a","totalTokens","Object","keys","username","balance","weighted","addr","ssi","sum","r","Math","random","address","Error","useState","setUsername","domain","setDomain","account","setAccount","pscMember","setPscMember","taken","setTaken","handleReset","role","aria-label","marginBottom","textAlign","onChange","onSubmit","e","preventDefault","type","event","input","target","value","test","length","for","onClick","arweave","Arweave","init","host","port","protocol","SmartWeave","ayjaPstStateID","catch","err","ayjaState","_err","undefined","alert","listStyle","generateRandomBytes","array","Uint8Array","window","crypto","getRandomValues","generatePublicEncryption","privKey","privateKey","create","algo","name","hash","keyData","kty","n","alg","ext","subtle","importKey","publicKey","keyBuf","encrypt","encryptedPublicKey","publicEncryption","utils","concatBuffers","bufferTob64Url","generateSsiKeys","wallets","generate","encryptKey","arConnect","key","JSON","stringify","algorithm","encryptedKey","encryptData","data","publicEnc","b64UrlToBuffer","encKey","slice","contentBuf","TextEncoder","encode","encryptedContent","encryptedData","Profile","arconnect","keyfile","donationAmount","setDonationAmount","message","setMessage","placeholder","confirm","createTransaction","quantity","ar","arToWinston","tx","transactions","sign","post","result","status","wallet","method","action","rows","userPermawallet","userSsiComm","ssiComm","DKMS","encryptedMessage","setValue","save","setSave","setAddr","setArconnect","setKeyfile","button","setButton","useArConnect","useEffect","getPermissions","includes","getActiveAddress","addEventListener","detail","fileInput","React","createRef","disconnect","permissions","open","connect","ref","this_keyfile","current","files","fr","FileReader","onload","file","parse","readAsText","jwkToAddress","CreateAccount","emptyMessage","firstName","lastName","streetName","buildingNumber","country","ivms101","setIvms101","setFirstName","setLastName","setStreetName","setBuildingNumber","setCountry","passportButton","setPassportButton","savePassport","setSavePassport","registerButton","setRegisterButton","register","setRegister","_event","ssiCommKeys","trSsiKeys","encryptedTrPassport","ssiCommPrivate","ssiTravelRulePrivate","permawalletTemplateID","toString","permawalletInitState","trp","fee","addTag","permawalletSourceID","dnsInput","function","dnsssi","dnswallet","dnsTx","Settings","update","setUpdate","newAddress","setNewAddress","keyId","setKeyId","specificId","setSpecificId","updateAddressLegend","setUpdateAddressLegend","updateAddressButton","setUpdateAddressButton","sendKey","setSendKey","newKeyButton","setNewKeyButton","savePassportLegend","setSavePassportLegend","savePassportButton","setSavePassportButton","updatePassportLegend","setUpdatePassportLegend","updatePassportButton","setUpdatePassportButton","contractId","owallet","ssicomm","trmessage","trkey","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a302124c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n    return(\n        <div id=\"header\">\n            <div class=\"content\">\n                <div class=\"inner\">\n                    <h1>(* search bar *)</h1>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n    return(\n        <footer id=\"footer\">\n            <ul class=\"icons\" style={{ marginTop: '0.5%'}}>\n                <li><a href=\"https://github.com/Zillacracy-org/ssibrowser.com\" class=\"icon brands fa-github\"><span class=\"label\">GitHub</span></a></li>\n            </ul>\n\t\t</footer>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Home() {\n    return (\n        <div id=\"header\" style={{ marginTop: '1%' }}>\n            <nav style={{ width:\"100%\"}}>\n                <ul>\n                    <li><Link to=\"/domains\">Domains</Link></li>\n                    <li><Link to=\"/contact\">Join us</Link></li>\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default withRouter(Home);\n","export async function selectWeightedAyjaHolder(accounts) {\n    // Count the total tokens\n    let totalTokens = 0;\n    for (const username of Object.keys(accounts)) {\n      \ttotalTokens += accounts[username].balance;\n    }\n    // Create a copy of balances where the amount each holder owns is represented by a value 0-1\n    const weighted = {};\n    for (const username of Object.keys(accounts)) {\n\t\tconst addr = accounts[username].ssi;\n      \tweighted[addr] = accounts[username].balance / totalTokens;\n    }\n  \n    let sum = 0;\n    const r = Math.random();\n    for (const address of Object.keys(weighted)) {\n\t\tsum += weighted[address];\n\t\tif (r <= sum && weighted[address] > 0.0001) {\n\t\t\treturn address;\n\t\t}\n    }\n    throw new Error('Unable to select token holder.');\n}\n  ","import React, { useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Arweave from 'arweave';\nimport * as SmartWeave from 'smartweave';\nimport { ayjaPstStateID, ConnectWallet } from \".\";\nimport { selectWeightedAyjaHolder } from \"../lib/select-weighted-ayja-holder\";\n\nfunction Domains() {\n    const[username, setUsername] = useState('');\n    const[domain, setDomain] = useState('mapu');\n    const[account, setAccount] = useState({});\n    const[pscMember, setPscMember] = useState('');\n    const[taken, setTaken] = useState('no');\n\n    const handleUsername = event => {\n        event.preventDefault();\n        const input = event.target.value;\n        const regex = /^[\\w\\d_]+$/;\n        if( !regex.test(input) || input.length < 5 || input.length > 15 ){\n        } else{\n            setUsername(input);\n        }\n    };\n    const handleDomain = event => {\n        setDomain(event.target.value);\n    };\n    const handleReset = () => {\n        setAccount({});\n        setPscMember('');\n        setAccount({});\n        setTaken('no');\n    };\n\n\treturn(\n\t\t<div id=\"main\">\n            <span role=\"img\" aria-label=\"back arrow\" style={{ marginTop:\"7%\", marginBottom: '2%' }}><Link to=\"/\">🔙</Link></span>\n            <h2 style={{ width: \"100%\", textAlign:\"center\" }}>Domains</h2>\n            <section style={{width:'100%'}}>\n                <p>Search for a <i>username.domain</i> to access its public profile - or if it's available, you can register it!</p>\n                <div class=\"table-wrapper\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Domain</th>\n                                <th>For</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>.ssi</td>\n                                <td>Self-sovereign digital identities</td>\n                            </tr>\n                            <tr>\n                                <td>.did</td>\n                                <td>Decentralized identifier smart contracts</td>\n                            </tr>\n                            <tr>\n                                <td>.mapu</td>\n                                <td>Self-sovereign decentralized communities</td>\n                            </tr>\n                            \n                            <tr>\n                                <td>.agent</td>\n                                <td>SSI Agents</td>\n                            </tr>\n                            <tr>\n                                <td>.tyron</td>\n                                <td>Tyron smart contracts</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <form onChange={ handleReset } onSubmit= { e => e.preventDefault() }>\n                    <div class=\"fields\">\n                        <div class=\"field half\">\n                            <label>Username</label>\n                            <input type=\"text\" onChange={ handleUsername } />\n                        </div>\n                        <div class=\"field half\">\n                            <label for=\"domain\">Domain</label>\n                            <select onChange={ handleDomain }>\n                                <option value=\"mapu\">.mapu</option>\n                            </select>\n                        </div>\n                    </div>\n                    <ul class=\"actions\">\n                        <li><input class=\"button primary\" type=\"button\" value=\"Search\"\n                                onClick={ async() => {\n                                    try {\n                                        if( username === '' ){\n                                            throw new Error(`at the moment, usernames must have between 5 and 15 characters, contain only letters, numbers and underscores, and no spaces.`)\n                                        } else{\n                                            const arweave = Arweave.init({\n                                                host: 'arweave.net',\n                                                port: 443,\n                                                protocol: 'https'\n                                            });\n                                            const ayjaState = await SmartWeave.readContract(arweave, ayjaPstStateID).catch( err => { throw err })\n                                            const pscMember = await selectWeightedAyjaHolder(ayjaState.accounts).catch( _err => { return \"3SW6cE4cTiHMPO0z9ZszgfzjbsgZaMefpNmIy4dFhl0\" })\n                                            setPscMember(pscMember);\n        \n                                            if( ayjaState.accounts[username] !== undefined ) {\n                                                setAccount(ayjaState.accounts[username]);\n                                                setTaken('yes');\n                                            };\n                                        }\n                                    } catch (error) {\n                                        alert(error);\n                                    }\n                                }}\n                                />\n                        </li>\n                        <li><input type=\"reset\" value=\"Reset\" onClick={ handleReset } /></li>\n                    </ul>\n                </form>\n            </section>\n            <section style={{width:'100%'}}>\n                { pscMember !== '' && username !== '' && <ConnectWallet taken={ taken } username={ username } domain={ domain } account={ account } pscMember={ pscMember }/>}\n            </section>\n        </div>\n\t);\n}\n\nexport default withRouter(Domains);\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Contact() {\n\treturn(\n\t\t<div id=\"main\">\n            <span role=\"img\" aria-label=\"back arrow\" style={{ marginTop:\"7%\", marginBottom: '2%' }}><Link to=\"/\">🔙</Link></span>\n            <h2 style={{ width: \"100%\", textAlign:\"center\" }}>Join us</h2>\n            <section style={{ width: \"100%\", textAlign:\"center\" }} >  \n                <ul style={{ listStyle: 'none' }}>\n                    <li><a href=\"https://ssiprotocol.com\">www.ssiprotocol.com</a></li>\n                    <li><a href=\"https://https://zillacracy.com/\">www.zillacracy.com</a></li>\n                    <li><a href=\"https://discord.gg/FMAUh4ZNwZ\" class=\"icon brands fa-discord\"><span class=\"label\">Discord</span></a> Join the Zilliqa server and find the <code>tyron-ssi-protocol</code> channel in Zilgineers</li>\n                </ul>\n            </section>\t\n        </div>\n\t);\n}\n\nexport default withRouter(Contact);\n","export async function generateRandomBytes(length) {\n    const array = new Uint8Array(length);\n    window.crypto.getRandomValues(array);\n    return array;\n}","import { generateRandomBytes } from './crypto-util';\nimport Arweave from 'arweave';\n\nexport async function generatePublicEncryption(privKey) {\n    let privateKey = Object.create(privKey);\n    const algo = { name: 'RSA-OAEP', hash: { name: 'SHA-256' } };\n    const keyData = {\n        kty: \"RSA\",\n        e: \"AQAB\",\n        n: privateKey.n,\n        alg: 'RSA-OAEP-256',\n        ext: true\n    };                                \n    const publicKey = await crypto.subtle.importKey('jwk', keyData, algo, false, ['encrypt']);\n    const keyBuf = await generateRandomBytes(256);\n    const encryptedPublicKey = await window.crypto.subtle.encrypt({ name: 'RSA-OAEP' }, publicKey, keyBuf);\n    let publicEncryption = Arweave.utils.concatBuffers([encryptedPublicKey, keyBuf]);\n    publicEncryption = Arweave.utils.bufferTob64Url(publicEncryption);\n    return publicEncryption;\n}\n\nexport async function generateSsiKeys(arweave) {\n    const privateKey = await arweave.wallets.generate();\n    const keyData = {\n        kty: privateKey.kty,\n        e: privateKey.e,\n        n: privateKey.n,\n        alg: 'RSA-OAEP-256',\n        ext: true\n    };\n    const algo = { name: 'RSA-OAEP', hash: { name: 'SHA-256' } };                                    \n    const publicKey = await crypto.subtle.importKey('jwk', keyData, algo, false, ['encrypt']);\n    const keyBuf = await generateRandomBytes(256);\n    const encryptedPublicKey = await window.crypto.subtle.encrypt({ name: 'RSA-OAEP' }, publicKey, keyBuf);\n    let publicEncryption = Arweave.utils.concatBuffers([encryptedPublicKey, keyBuf]);\n    publicEncryption = Arweave.utils.bufferTob64Url(publicEncryption);\n    \n    return {\n        privateKey: privateKey,\n        publicEncryption: publicEncryption      \n    }\n}\n\nexport async function encryptKey(arConnect, key) {\n    let encryptedKey = await arConnect.encrypt(\n        JSON.stringify(key),\n        {\n            algorithm: 'RSA-OAEP',\n            hash: 'SHA-256'\n        }\n    );\n    encryptedKey = Arweave.utils.bufferTob64Url(encryptedKey); \n    return encryptedKey;\n}\n\nexport async function decryptKey(arConnect, encryptedKey) {\n    const encryptedArray = Arweave.utils.b64UrlToBuffer(encryptedKey);\n    const decryptedKey = await arConnect.decrypt(\n        encryptedArray,\n        {\n            algorithm: 'RSA-OAEP',\n            hash: 'SHA-256'\n        }\n    );\n    return decryptedKey;\n}\n\nexport async function encryptData(data, publicEncryption) {\n    const publicEnc = Arweave.utils.b64UrlToBuffer(publicEncryption);\n    const encKey = new Uint8Array(publicEnc.slice(0, 512));\n    const keyBuf = new Uint8Array(publicEnc.slice(512))\n\n    const contentBuf = new TextEncoder().encode(JSON.stringify(data));\n    \n    const encryptedContent = await Arweave.crypto.encrypt(contentBuf, keyBuf);\n    let encryptedData = Arweave.utils.concatBuffers([encKey, encryptedContent]);\n    encryptedData = Arweave.utils.bufferTob64Url(encryptedData);\n    \n    return encryptedData;\n}\n\nexport async function decryptData(data, decKey) {\n    const encryptedArray = Arweave.utils.b64UrlToBuffer(data);\n    let encryptedBuffer = encryptedArray.buffer;\n    const encKey = new Uint8Array(encryptedBuffer.slice(0, 512));\n    const encryptedData = new Uint8Array(encryptedBuffer.slice(512));\n\n    let key = Object.create(decKey);\n    key.alg = 'RSA-OAEP-256';\n    key.ext = true;\n    const algo = { name: 'RSA-OAEP', hash: { name: 'SHA-256' } };\n    key = await crypto.subtle.importKey('jwk', key, algo, false, ['decrypt']);\n    const symmetricKey = await window.crypto.subtle.decrypt({ name: 'RSA-OAEP' }, key, encKey)\n\n    let decryptedData = await Arweave.crypto.decrypt(encryptedData, symmetricKey);\n    decryptedData = Arweave.utils.bufferToString(decryptedData);\n    return decryptedData;\n}\n","import React, { useState } from \"react\";\nimport Arweave from 'arweave';\nimport * as SmartWeave from 'smartweave';\nimport * as DKMS from '../lib/dkms';\n\nfunction Profile({ username, domain, account, arweave, arconnect, keyfile }) {\n    const[donationAmount, setDonationAmount] = useState('');\n    const handleDonationAmount = event => {\n        setDonationAmount(event.target.value);\n    };\n\n    const[message, setMessage] = useState('');\n    const handleMessage = event => {\n        setMessage(event.target.value);\n    };\n\n\treturn(\n\t\t<div id=\"main\">\n            <h2 style={{ width: \"100%\", textAlign:\"center\" }} class=\"major\">public profile of { username }.{ domain }</h2>    \n            <section style={{ width: \"100%\", marginTop:\"4%\" }}>\n                <h4 class=\"major\">Articles</h4>\n                <p>Coming soon!</p>\n            </section>\n            <section style={{ width: \"100%\", marginTop:\"4%\" }}>\n                <h4 class=\"major\">Donations</h4>\n                <p>Show your support:</p>\n                <form><div class=\"fields\">\n                    <div class=\"field half\"> \n                        <input type=\"text\" placeholder=\"Amount\" onChange={handleDonationAmount} /></div>\n                    <div class=\"field half\">\n                        <input type=\"button\" class=\"button primary\" value=\"Donate $AR\"\n                            onClick={ async() => {\n                                try {\n                                    if( keyfile === '' &&  arconnect === '' ) {\n                                        throw new Error(`You have to connect with ArConnect or your keyfile.`)\n                                    }\n                                    if (window.confirm(`You are about to donate ${donationAmount} $AR to '${ username }.${ domain }'. Click OK to proceed.`)) {\n                                        let tx;\n                                        if( arconnect !== ''){\n                                            tx = await arweave.createTransaction({\n                                                target: account.ssi,\n                                                quantity: arweave.ar.arToWinston(donationAmount)\n                                            });\n                                            await arweave.transactions.sign(tx);\n                                        } else{\n                                            tx = await arweave.createTransaction({\n                                                target: account.ssi,\n                                                quantity: arweave.ar.arToWinston(donationAmount)\n                                            },\n                                            keyfile\n                                            );\n                                            await arweave.transactions.sign(tx, keyfile);\n                                        }\n                                        const result = await arweave.transactions.post(tx);\n                                        alert(`Transaction: ${ tx }. Status: ${ result.status }`);\n                                    }\n                                } catch (error) {\n                                    alert(error)\n                                }\n                            }}\n                        />\n                    </div>\n                </div></form>\n            </section>\n            { account.wallet !== \"\" &&\n                <section style={{ width: \"100%\", marginTop:\"4%\" }}>\n                    <h4 class=\"major\">SSI Communication</h4>\n                    <p>Send them an encrypted message:</p>\n                    <form method=\"post\" action=\"#\">\n                        <div class=\"fields\">\n                            <div class=\"field\">\n                                <textarea onChange={ handleMessage }rows=\"4\"></textarea>\n                            </div>\n                        </div>\n                        <ul class=\"actions\">\n                            <li><input type=\"button\" class=\"button primary\" value=\"Encrypt & send\"\n                                onClick={ async() => {\n                                    try {\n                                        if( keyfile === '' &&  arconnect === '' ) {\n                                            throw new Error(`You have to connect with ArConnect or your keyfile.`)\n                                        }\n\n                                        const userPermawallet = await SmartWeave.readContract(arweave, account.wallet);\n                                        const userSsiComm = userPermawallet.ssiComm;\n                                        const encryptedMessage = await DKMS.encryptData(message, userSsiComm);\n                                        \n                                        if (window.confirm(`You are about to send a message to ${ username }.${ domain }'. Click OK to proceed.`)) {\n                                            let tx;\n                                            if( arconnect !== ''){\n                                                tx = await arweave.createTransaction({\n                                                    target: account.ssi,\n                                                    data: Arweave.utils.concatBuffers([encryptedMessage]),\n                                                    quantity: arweave.ar.arToWinston('0')\n                                                });\n                                                await arweave.transactions.sign(tx);\n                                            } else{\n                                                tx = await arweave.createTransaction({\n                                                    target: account.ssi,\n                                                    data: Arweave.utils.concatBuffers([encryptedMessage]),\n                                                    quantity: arweave.ar.arToWinston('0')\n                                                },\n                                                keyfile\n                                                );\n                                                await arweave.transactions.sign(tx, keyfile);    \n                                            }\n                                            const result = await arweave.transactions.post(tx);\n                                            alert(`Transaction: ${ JSON.stringify(tx) }. Status: ${ result.status }`);\n                                        }\n                                    } catch (error) {\n                                        alert(error)\n                                    }\n                                }}\n                            /></li>\n                            <li><input type=\"reset\" value=\"Reset\" /></li>\n                        </ul>\n                    </form>\n                </section>\n            }\t\n        </div>\n\t);\n}\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\nimport useArConnect from 'use-arconnect';\nimport { withRouter } from \"react-router-dom\";\nimport { Settings, Profile, CreateAccount } from \".\";\nimport Arweave from 'arweave';\n\nfunction ConnectWallet({ taken, username, domain, account, pscMember }) {   \n    const[value, setValue] = useState('ArConnect');\n    const[save, setSave] = useState('Save keyfile')\n    const[addr, setAddr] = useState('');\n    const[arconnect, setArconnect] = useState('');\n    const[keyfile, setKeyfile] = useState('');\n    const[button, setButton] = useState('button primary');\n\n    const arConnect = useArConnect();\n    const arweave = Arweave.init({\n        host: 'arweave.net',\n        port: 443,\n        protocol: 'https'\n    });\n\n    useEffect(() => {\n        if (!arConnect) return;\n        (async () => {\n            try {\n                const permissions = await arConnect.getPermissions();\n                if (permissions.includes(\"ACCESS_ADDRESS\")) {\n                    setAddr(await arConnect.getActiveAddress());\n                    setValue('Disconnect');\n                    window.addEventListener(\"walletSwitch\", e => { setAddr(e.detail.address)});\n                    setArconnect(arConnect);\n                }\n            } catch {}\n        })();\n    }, [arConnect]);\n\n    const fileInput = React.createRef();\n\n    const handleKeyFile = event => {\n        event.preventDefault();\n        const this_keyfile = fileInput.current.files[0];\n        if( this_keyfile !== undefined ){\n            alert(`Selected file: ${ this_keyfile.name}`);\n        }\n        const fr = new FileReader();\n        fr.onload = function (e) {\n            const file = JSON.parse(e.target.result);\n            setKeyfile(file);\n        };\n        fr.readAsText(fileInput.current.files[0]);\n    };\n\n    return(\n\t\t<div id=\"main\" style={{ marginTop:\"4%\" }}>\n            <h2 style={{ width: \"100%\", textAlign:\"center\" }} class=\"major\">Sign in</h2>\n            <section style={{ width:'100%' }}>\n                <p>Connect your SSI Permaweb Key to access your settings or to register a new account:</p>\n                <ul>\n                    <li><input class=\"button\" type=\"button\" value={ value }\n                        onClick={ async() => {\n                            switch (value) {\n                                case \"Disconnect\":\n                                    await arConnect.disconnect()\n                                    setValue('ArConnect');\n                                    setArconnect('');\n                                    setAddr('');\n                                    alert(`Your wallet got successfully disconnected.`)\n                                    return;\n                                default:\n                                    const permissions = [\n                                        \"ACCESS_ADDRESS\",\n                                        \"SIGN_TRANSACTION\",\n                                        \"ENCRYPT\",\n                                        \"DECRYPT\"\n                                    ]\n                                    try {\n                                        if (!arConnect) {\n                                            if (window.confirm(\"You have to download the ArConnect browser extension. Click OK to get redirected.\")) {\n                                                window.open(\"https://arconnect.io/\")\n                                            }                    \n                                        } else {\n                                            await arConnect.connect(permissions);\n                                            setAddr(await arConnect.getActiveAddress());\n                                            setValue(\"Disconnect\");\n                                            setArconnect(arConnect);\n                                        }\n                                        } catch(err) {\n                                    alert(`${err}.`)\n                                    }\n                                    break;\n                            }\n                        }}\n                    /></li>\n                    \n                    <li style={{ marginTop:\"3%\" }}><input type=\"file\" ref={ fileInput } onChange={ handleKeyFile } />\n                    <input class={ button } type=\"button\" value={ save }\n                        onClick={ async() => {\n                            if( keyfile !== ''){\n                                const address = await arweave.wallets.jwkToAddress(keyfile);\n                                alert(`The address of this keyfile is: ${address}`)\n                                setAddr(address);\n                                setSave('keyfile saved');\n                                setButton('button');\n                            } else{\n                                alert(`Address not retrieved from keyfile.`)\n                            }\n                        }}\n                    /></li>\n                </ul>\n            </section>\n            <section style={{ width:'100%', marginTop:\"4%\" }} >\n                { addr !== '' && account.ssi === addr && <Settings username={ username } domain={ domain } account={ account } pscMember={ pscMember } arweave={ arweave } arconnect={ arconnect } keyfile={ keyfile } /> }\n                { taken === \"yes\" && account.ssi !== addr && <Profile username={ username } domain={ domain } account={ account } arweave={ arweave } arconnect={ arconnect } keyfile={ keyfile } /> }\n                { taken === \"no\" && <CreateAccount username={ username } domain={ domain } address={ addr } pscMember={ pscMember } arweave={ arweave } arconnect={ arconnect } keyfile={ keyfile } /> }\n            </section>\n        </div>\n        \n\t);\n}\n\nexport default withRouter(ConnectWallet);\n","import React, { useState } from \"react\";\nimport { ayjaPstStateID, permawalletTemplateID, permawalletSourceID } from \".\";\nimport * as DKMS from '../lib/dkms';\nimport * as SmartWeave from 'smartweave';\n\nfunction CreateAccount({ username, domain, address, pscMember, arweave, arconnect, keyfile }) {\n    const emptyMessage = {\n        firstName: \"\",\n        lastName: \"\",\n        streetName: \"\",\n        buildingNumber: \"\",\n        country: \"\"\n    };\n    const[ivms101, setIvms101] = useState(emptyMessage);\n    const[firstName, setFirstName] = useState('');\n    const[lastName, setLastName] = useState('');\n    const[streetName, setStreetName] = useState('');\n    const[buildingNumber, setBuildingNumber] = useState('');\n    const[country, setCountry] = useState('');\n    const handleFirstName = event => {\n        setFirstName(event.target.value);\n    };\n    const handleLastName = event => {\n        setLastName(event.target.value);\n    };\n    const handleStreetName = event => {\n        setStreetName(event.target.value);\n    };\n    const handleBuildingNumber = event => {\n        setBuildingNumber(event.target.value);\n    };\n    const handleCountry = event => {\n        setCountry(event.target.value);\n    };\n\n    const[passportButton, setPassportButton] = useState('button primary');\n    const[savePassport, setSavePassport] = useState('Save SSI Travel Rule Passport')\n    const[registerButton, setRegisterButton] = useState('button primary');\n    const[register, setRegister] = useState('Register Self-Sovereign Identity Permawallet');\n\n\treturn(\n\t\t<div id=\"main\">\n            <h2 style={{ width: \"100%\", textAlign:\"center\" }} class=\"major\"> Register { username }.{ domain } </h2>\n            <p style={{ width: \"100%\" }}> { username }.{ domain } is available for you to register! </p>\n            <section style={{ width: \"100%\" }}>\n                <ol> \n                    <li style={{ marginTop: \"4%\" }}>\n                        <h4 class=\"major\">Generate your SSI Travel Rule Passport</h4>\n                        <p>Create an <a href=\"https://intervasp.org/wp-content/uploads/2020/05/IVMS101-interVASP-data-model-standard-issue-1-FINAL.pdf\">IVMS101 message</a> for KYC to make your self-hosted wallet compliant with the FATF Travel Rule to counteract money laundering and terrorism financing, and thus building a web of trust. This personal information will get encrypted by an SSI Travel Rule Key generated by your SSI Permawallet - only you decide who can read this message. You won't need to give this information anymore to third parties, over and over again. Your SSI Travel Rule - private - Key will get encrypted by your SSI Permaweb Key and saved into your wallet, so only you can access it. When making a transfer, you will have the option to attach this secret encrypted by the beneficiary's SSI Communication Key so they can read your Travel Rule Passport.</p>\n                        <form>\n                            <div class=\"fields\">\n                                <div class=\"field half\">\n                                    <label>First name</label>\n                                    <input type=\"text\" onChange={ handleFirstName } />\n                                </div>\n                                <div class=\"field half\">\n                                    <label>Last name</label>\n                                    <input type=\"text\" onChange={ handleLastName } />\n                                </div>\n                            </div>\n                            <section style={{width:'100%', marginBottom:\"3%\"}}>\n                                <h4>Residential address</h4>\n                                <div class=\"fields\">\n                                    <input type=\"text\" placeholder=\"Street name\" onChange={ handleStreetName } />\n                                </div>\n                            </section>\n                            <div class=\"fields\">\n                                <div class=\"field half\">\n                                    <input type=\"text\" placeholder=\"Building number\" onChange={ handleBuildingNumber } />\n                                </div>\n                                <div class=\"field half\">\n                                    <select onChange={ handleCountry }>\n                                        <option value=\"\">Select country of residence</option>\n                                        <option value=\"Argentina\">Argentina</option>\n                                        <option value=\"Denmark\">Denmark</option>\n                                        <option value=\"Singapore\">Singapore</option>\n                                        <option value=\"United Kingdom\">United Kingdom</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <ul class=\"actions\">\n                                <li><input type=\"button\" class={ passportButton } value={ savePassport }\n                                        onClick={ () => {\n                                            setIvms101({\n                                                firstName: firstName,\n                                                lastName: lastName,\n                                                streetName: streetName,\n                                                buildingNumber: buildingNumber,\n                                                country: country\n                                            })\n                                            setSavePassport('Saved');\n                                            setPassportButton('button');\n                                        }}\n                                        />\n                                </li>\n                                <li><input type=\"reset\" value=\"Reset\" onClick={ _event => { setIvms101(emptyMessage); setSavePassport('Save SSI Travel Rule Passport'); setPassportButton('button primary') }} /></li>\n                            </ul>\n                        </form>\n                    </li>   \n                    <li style={{ marginTop: \"6%\" }}>\n                        <h4 class=\"major\">Create your SSI Permawallet for { username }.{ domain }</h4>\n                        <input type=\"button\" class={ registerButton } value= { register }\n                                onClick={ async() => {\n                                    try {\n                                        if( keyfile === '' &&  arconnect === '' ) {\n                                            throw new Error(`You have to connect with ArConnect or your keyfile.`)\n                                        }\n                                        if( savePassport === 'Save SSI Travel Rule Passport' ){\n                                            throw new Error('You have to fill up and save the SSI Travel Rule Passport information first.')\n                                        }\n                                        // SSI Communication Keys\n                                        const ssiCommKeys = await DKMS.generateSsiKeys(arweave);\n                                        \n                                        // Travel Rule Passport\n                                        const trSsiKeys = await DKMS.generateSsiKeys(arweave);\n                                        const encryptedTrPassport = await DKMS.encryptData(ivms101, trSsiKeys.publicEncryption);\n                                        alert(`This is your encrypted SSI Travel Rule Passport: ${ encryptedTrPassport }`);\n                                        \n                                        // Encrypt private keys\n                                        let ssiCommPrivate;\n                                        let ssiTravelRulePrivate;\n                                        if( arconnect !== '' ){\n                                            ssiCommPrivate = await DKMS.encryptKey(arconnect, ssiCommKeys.privateKey);\n                                            ssiTravelRulePrivate = await DKMS.encryptKey(arconnect, trSsiKeys.privateKey);\n                                        } else{\n                                            const publicEncryption = await DKMS.generatePublicEncryption(keyfile);\n                                            ssiCommPrivate = await DKMS.encryptData(ssiCommKeys.privateKey, publicEncryption);\n                                            ssiTravelRulePrivate = await DKMS.encryptData(trSsiKeys.privateKey, publicEncryption);\n                                        }\n                                        \n                                        /*For testing\n                                        const decryptedTrSsiKey = await DKMS.decryptData(ssiTravelRulePrivate, keyfile);\n                                        alert(`SSI TR decrypted key: ${decryptedTrSsiKey}`);\n                                        const decryptedTrPassport = await DKMS.decryptData(encryptedTrPassport, JSON.parse(decryptedTrSsiKey));\n                                        alert(decryptedTrPassport);\n                                        */\n\n                                        // Permawallet initial state\n                                        \n                                        let permawalletInitState = await SmartWeave.readContract(arweave, permawalletTemplateID.toString());\n                                        permawalletInitState.ssi = address;\n                                        permawalletInitState.ssiComm = ssiCommKeys.publicEncryption;\n                                        permawalletInitState.trp.message = encryptedTrPassport;\n                                        permawalletInitState.trp.key = ssiTravelRulePrivate;\n                                        permawalletInitState.keys.ssiComm = ssiCommPrivate;\n                                        \n                                        // Fee paid to the PSC\n                \n                                        const fee = arweave.ar.arToWinston('0.1');\n                                        let tx;\n\n                                        if( arconnect !== ''){\n                                            if( window.confirm(\"The fee to create your SSI Permawallet is 0.1 $AR, paid to the AYJA profit sharing community. Click OK to proceed.\")) {\n                                                if( pscMember === address ){\n                                                    alert(`You got randomly selected as the PSC winner for this transaction - lucky you! That means no fee.`)\n                                                    tx = await arweave.createTransaction(\n                                                        { \n                                                            data: JSON.stringify(permawalletInitState) \n                                                        }\n                                                    ).catch( err => { throw err });\n                                                } else{\n                                                    tx = await arweave.createTransaction(\n                                                        {\n                                                            data: JSON.stringify(permawalletInitState),\n                                                            target: pscMember.toString(),\n                                                            quantity: fee.toString(),\n                                                        }\n                                                    );\n                                                }\n                                                tx.addTag('Dapp', 'tyron');\n                                                tx.addTag('App-Name', 'SmartWeaveContract');\n                                                tx.addTag('App-Version', '0.3.0');\n                                                tx.addTag('Contract-Src', permawalletSourceID.toString());\n                                                tx.addTag('Content-Type', 'application/json');\n                                                    \n                                                await arweave.transactions.sign(tx).catch( err => { throw err });\n                                                await arweave.transactions.post(tx).catch( err => { throw err });\n                                                tx = tx.id;\n                                            }\n                                        } else{\n                                            if( window.confirm(\"The fee to create your SSI Permawallet is 0.1 $AR, paid to the AYJA profit sharing community. Click OK to proceed.\")) {\n                                                if( pscMember === address ){\n                                                    alert(`You got randomly selected as the PSC winner for this transaction - lucky you! That means no fee.`)\n                                                    tx = await SmartWeave.createContractFromTx(\n                                                        arweave,\n                                                        keyfile,\n                                                        permawalletSourceID.toString(),\n                                                        JSON.stringify(permawalletInitState)\n                                                    ).catch( err => { throw err });\n                                                } else{\n                                                    tx = await SmartWeave.createContractFromTx(\n                                                        arweave,\n                                                        keyfile,\n                                                        permawalletSourceID.toString(),\n                                                        JSON.stringify(permawalletInitState),\n                                                        [],\n                                                        pscMember,\n                                                        fee\n                                                    ).catch( err => { throw err });\n                                                }\n                                            }\n                                        }\n                                        if( tx === undefined ){\n                                            alert(`Transaction rejected.`)\n                                        } else{\n                                            alert(`Your permawallet ID is: ${ tx }`);\n                                        \n                                            const dnsInput = {\n                                                function: 'dns',\n                                                username: username,\n                                                dnsssi: address,\n                                                dnswallet: tx\n                                            };\n                                            \n                                            let dnsTx;\n                                            if( arconnect !== ''){\n                                                if( window.confirm(`The fee to get ${ username }.${ domain } is 0.1 $AR, paid to the AYJA profit sharing community. Click OK to proceed.`)) {\n                                                    if( pscMember === address ){\n                                                        alert(`You got randomly selected as the PSC winner for this transaction - lucky you! That means no fee.`)\n                                                        dnsTx = await arweave.createTransaction(\n                                                            { \n                                                                data: Math.random().toString().slice(-4) \n                                                            }\n                                                        ).catch( err => { throw err });\n                                                    } else{\n                                                        dnsTx = await arweave.createTransaction(\n                                                            {\n                                                                data: Math.random().toString().slice(-4),\n                                                                target: pscMember.toString(),\n                                                                quantity: fee.toString(),\n                                                            }\n                                                        ).catch( err => { throw err });\n                                                    }\n                                                    dnsTx.addTag('Dapp', 'tyron');\n                                                    dnsTx.addTag('App-Name', 'SmartWeaveAction');\n                                                    dnsTx.addTag('App-Version', '0.3.0');\n                                                    dnsTx.addTag('Contract', ayjaPstStateID.toString());\n                                                    dnsTx.addTag('Input', JSON.stringify(dnsInput));\n\n                                                    await arweave.transactions.sign(dnsTx).catch( err => { throw err });\n                                                    await arweave.transactions.post(dnsTx).catch( err => { throw err });\n                                                    dnsTx = dnsTx.id;\n                                                }\n                                            } else{\n                                                if( window.confirm(`The fee to get ${ username }.${ domain } is 0.1 $AR, paid to the AYJA profit sharing community. Click OK to proceed.`)) {\n                                                    if( pscMember === address ){\n                                                        alert(`You got randomly selected as the PSC winner for this transaction - lucky you! That means no fee.`)\n                                                        dnsTx = await SmartWeave.interactWrite(\n                                                            arweave,\n                                                            keyfile,\n                                                            ayjaPstStateID.toString(),\n                                                            dnsInput        \n                                                        ).catch( err => { throw err });\n                                                    } else{\n                                                        dnsTx = await SmartWeave.interactWrite(\n                                                            arweave,\n                                                            keyfile,\n                                                            ayjaPstStateID.toString(),\n                                                            dnsInput,\n                                                            [],\n                                                            pscMember.toString(),\n                                                            fee.toString()\n                                                        ).catch( err => { throw err });\n                                                    }\n                                                }\n                                            }\n                                            if( dnsTx === undefined ){\n                                                alert(`Transaction rejected.`)\n                                            } else{\n                                                alert(`Your DNS transaction was successful! Its ID is: ${ dnsTx }`);\n                                                setRegister('registered');\n                                                setRegisterButton('button');\n                                            }\n                                        }\n                                    } catch (error) {\n                                        alert(error)\n                                    }\n                            }}\n                        />\n                        { register === 'registered' && <p style={{ marginTop: \"4%\" }}>To access { username }.{ domain }'s settings, go back to the browser, search and make sure your SSI Permaweb Key is connected. Please wait a few minutes until your Register transaction reaches finality on the Arweave network.</p>}\n                    </li>\n                </ol>\n            </section>                \n        </div>\n\t);\n}\n\nexport default CreateAccount;\n","import React, { useState } from \"react\";\nimport { ayjaPstStateID } from \".\";\nimport * as DKMS from '../lib/dkms';\nimport * as SmartWeave from \"smartweave\";\n\nfunction Settings({ username, domain, account, pscMember, arweave, arconnect, keyfile }) {\n    const[update, setUpdate] = useState('');\n    const handleUpdate = event => {\n        setUpdate(event.target.value);\n    };\n\n    const[newAddress, setNewAddress] = useState('');\n    const handleNewAddress = event => {\n        setNewAddress(event.target.value);\n    };\n\n    const[keyId, setKeyId] = useState('');\n    const handleKeyId = event => {\n        setKeyId(event.target.value);\n    };\n\n    const[specificId, setSpecificId] = useState('');\n    const handleSpecificId = event => {\n        setSpecificId(event.target.value);\n    };\n\n    const emptyMessage = {\n        firstName: \"\",\n        lastName: \"\",\n        streetName: \"\",\n        buildingNumber: \"\",\n        country: \"\"\n    };\n    const[ivms101, setIvms101] = useState(emptyMessage);\n    const[firstName, setFirstName] = useState('');\n    const[lastName, setLastName] = useState('');\n    const[streetName, setStreetName] = useState('');\n    const[buildingNumber, setBuildingNumber] = useState('');\n    const[country, setCountry] = useState('');\n    const handleFirstName = event => {\n        setFirstName(event.target.value);\n    };\n    const handleLastName = event => {\n        setLastName(event.target.value);\n    };\n    const handleStreetName = event => {\n        setStreetName(event.target.value);\n    };\n    const handleBuildingNumber = event => {\n        setBuildingNumber(event.target.value);\n    };\n    const handleCountry = event => {\n        setCountry(event.target.value);\n    };\n\n    const[updateAddressLegend, setUpdateAddressLegend] = useState('update');\n    const[updateAddressButton, setUpdateAddressButton] = useState('button primary');\n    const[sendKey, setSendKey] = useState('encrypt & send to permawallet');\n    const[newKeyButton, setNewKeyButton] = useState('button primary');\n    const[savePassportLegend, setSavePassportLegend] = useState('save');\n    const[savePassportButton, setSavePassportButton] = useState('button primary');\n    const[updatePassportLegend, setUpdatePassportLegend] = useState('update');\n    const[updatePassportButton, setUpdatePassportButton] = useState('button primary');\n    \n    return(\n\t\t<div id=\"main\">\n            <h2 style={{ width: \"100%\", textAlign:\"center\" }} class=\"major\">{ username }.{ domain } settings</h2>\n            <p style={{ width: \"100%\" }}>Hi { username }.{ domain }, welcome back!</p>\n            <section style={{ width: \"100%\", marginTop:\"4%\" }}>\n                <h4 class=\"major\">Update an address</h4>\n                <form>\n                    <div class=\"fields\">\n                        <div class=\"field half\">\n                            <select onChange={ handleUpdate }>\n                                <option value=\"\">Select</option>\n                                <option value=\"ssiAyja\">SSI address in AYJA</option>\n                                <option value=\"permawallet\">Permawallet address</option>\n                                <option value=\"ssiPermawallet\">SSI address in permawallet</option>\n                            </select>\n                        </div>\n                        \n                        { update !== \"\" && <div class=\"field half\"><input type=\"text\" placeholder=\"New address\" onChange={ handleNewAddress } /></div> }\n                    </div>\n                    <ul class=\"actions\">\n                        <li><input type=\"button\" class={ updateAddressButton } value={ updateAddressLegend }\n                            onClick={ async() => {\n                                try {\n                                    if( keyfile === '' &&  arconnect === '' ){\n                                        throw new Error(`You have to connect with ArConnect or your keyfile.`)\n                                    }\n\n                                    let input;\n                                    let contractId;\n                                    switch (update) {\n                                        case 'ssiAyja':\n                                            input = {\n                                                function: 'updateSsi',\n                                                username: username,\n                                                ssi: newAddress\n                                            };\n                                            contractId = ayjaPstStateID;\n                                            break;\n                                        case 'permawallet':\n                                            input = {\n                                                function: 'updateWallet',\n                                                username: username,\n                                                owallet: newAddress\n                                            };\n                                            contractId = ayjaPstStateID;  \n                                            break;\n                                        case 'ssiPermawallet':\n                                            input = {\n                                                function: 'ssi',\n                                                ssi: newAddress\n                                            };\n                                            contractId = account.wallet;\n                                            break;                                        \n                                        default:\n                                            throw new Error('Wrong selection.');\n                                    }\n                                    \n                                    const fee = arweave.ar.arToWinston('0.1');\n                                    \n                                    let tx;\n                                    if( arconnect !== '' ){\n                                        if( window.confirm(\"The fee to update an address in your SSI is 0.1 $AR, paid to the AYJA profit sharing community. Click OK to proceed.\")) {\n                                            if( pscMember === account.ssi ){\n                                                alert(`You got randomly selected as the PSC winner for this transaction - lucky you! That means no fee.`);\n                                                tx = await arweave.createTransaction(\n                                                    { \n                                                        data: Math.random().toString().slice(-4) \n                                                    }\n                                                ).catch( err => { throw err });\n                                            } else{\n                                                tx = await arweave.createTransaction(\n                                                    {\n                                                        data: Math.random().toString().slice(-4),\n                                                        target: pscMember.toString(),\n                                                        quantity: fee.toString(),\n                                                    }\n                                                ).catch( err => { throw err });\n                                            }\n                                            tx.addTag('Dapp', 'tyron');\n                                            tx.addTag('App-Name', 'SmartWeaveAction');\n                                            tx.addTag('App-Version', '0.3.0');\n                                            tx.addTag('Contract', contractId.toString());\n                                            tx.addTag('Input', JSON.stringify(input));\n    \n                                            await arweave.transactions.sign(tx).catch( err => { throw err });\n                                            await arweave.transactions.post(tx).catch( err => { throw err });\n                                            tx = tx.id;                                  \n                                        }\n                                    } else{\n                                        if(window.confirm(\"The fee to update an address in your SSI is 0.1 $AR, paid to the AYJA profit sharing community. Click OK to proceed.\")) {\n                                            if( pscMember === account.ssi ){\n                                                alert(`You got randomly selected as the PSC winner for this transaction - lucky you! That means no fee.`)\n                                                tx = await SmartWeave.interactWrite(arweave, keyfile, contractId, input).catch( err => { throw err });\n                                            } else{\n                                                tx = await SmartWeave.interactWrite(arweave, keyfile, contractId, input, [], pscMember, fee).catch( err => { throw err });\n                                            }                                       \n                                        }\n                                    }\n                                    if( tx === undefined ){\n                                        alert(`Transaction rejected.`)\n                                    } else{\n                                        alert(`Your transaction was successful! Its ID is: ${ tx }`);\n                                        setUpdateAddressLegend('updated');\n                                        setUpdateAddressButton('button');\n                                    }                             \n                                } catch (error) {\n                                    alert(error)\n                                }\n                            }}\n                        /></li>\n                        <li><input type=\"reset\" value=\"Reset\" onClick={ _event => { setUpdate(\"\"); setUpdateAddressLegend('update'); setUpdateAddressButton('button primary') }} /></li>\n                    </ul>\n                </form>\n            </section>\n            <section style={{ width: \"100%\", marginTop: \"4%\" }}>\n                <h4 class=\"major\">Generate a new key</h4>\n                <form>\n                    <div class=\"fields\">\n                        <div class=\"field half\">\n                            <select onChange={ handleKeyId }>\n                                <option value=\"\">Select</option>\n                                <option value=\"ssiComm\">SSI Communication Key</option>\n                                <option value=\"byId\">Key by ID</option>\n                            </select>\n                        </div>\n                        \n                        { keyId === \"byId\" && <div class=\"field half\"><input type=\"text\" placeholder=\"Key ID\" onChange={ handleSpecificId } /></div> }\n                    </div>    \n                    <ul class=\"actions\">\n                        <li><input type=\"button\" class={ newKeyButton } value={ sendKey }\n                            onClick={ async() => {\n                                try {\n                                    if( keyfile === '' &&  arconnect === '' ){\n                                        throw new Error(`You have to connect with ArConnect or your keyfile.`)\n                                    }\n\n                                    if( !account.wallet || account.wallet === \"\") {\n                                        throw new Error(`It seems like you don't have any SSI Permawallet registered.`);\n                                    }\n\n                                    let tx;\n                                    if( arconnect !== '' ){ \n                                        let input;\n                                        switch (keyId) {\n                                            case 'ssiComm':\n                                                {\n                                                    const ssiCommKeys = await DKMS.generateSsiKeys(arweave);\n                                                    const ssiCommPrivate = await DKMS.encryptKey(arconnect, ssiCommKeys.privateKey);\n                                                    input = {\n                                                        function: 'ssiComm',\n                                                        ssicomm: ssiCommKeys.publicEncryption,\n                                                        key: ssiCommPrivate\n                                                    };\n                                                }\n                                                break;\n                                            case 'byId':\n                                                {\n                                                    const keys = await DKMS.generateSsiKeys(arweave);\n                                                    const key = await DKMS.encryptKey(arconnect, keys.privateKey);\n                                                    input = {\n                                                        function: 'registerKey',\n                                                        id: specificId,\n                                                        key: key\n                                                    };\n                                                }\n                                                break;                                \n                                            default:\n                                                throw new Error('Wrong selection.');\n                                        }\n                                        const fee = arweave.ar.arToWinston('0.1');\n                                        \n                                        if(window.confirm(\"The fee to create a new key in your permawallet is 0.1 $AR, paid to the AYJA profit sharing community. Click OK to proceed.\")) {\n                                            if( pscMember === account.ssi ){\n                                                alert(`You got randomly selected as the PSC winner for this transaction - lucky you! That means no fee.`)\n                                                tx = await arweave.createTransaction(\n                                                    { \n                                                        data: Math.random().toString().slice(-4) \n                                                    }\n                                                ).catch( err => { throw err });\n                                            } else{\n                                                tx = await arweave.createTransaction(\n                                                    {\n                                                        data: Math.random().toString().slice(-4),\n                                                        target: pscMember.toString(),\n                                                        quantity: fee.toString(),\n                                                    }\n                                                ).catch( err => { throw err });\n                                            }\n                                            tx.addTag('Dapp', 'tyron');\n                                            tx.addTag('App-Name', 'SmartWeaveAction');\n                                            tx.addTag('App-Version', '0.3.0');\n                                            tx.addTag('Contract', ayjaPstStateID.toString());\n                                            tx.addTag('Input', JSON.stringify(input));\n\n                                            await arweave.transactions.sign(tx).catch( err => { throw err });\n                                            await arweave.transactions.post(tx).catch( err => { throw err });\n                                            tx = tx.id;                                   \n                                        }\n                                    } else{\n                                        const publicEncryption = await DKMS.generatePublicEncryption(keyfile);\n                                        let input;\n                                        switch (keyId) {\n                                            case 'ssiComm':\n                                                {\n                                                    const ssiCommKeys = await DKMS.generateSsiKeys(arweave);\n                                                    const ssiCommPrivate = await DKMS.encryptData(ssiCommKeys.privateKey, publicEncryption);\n                                                    input = {\n                                                        function: 'ssiComm',\n                                                        ssicomm: ssiCommKeys.publicEncryption,\n                                                        key: ssiCommPrivate\n                                                    };\n                                                }\n                                                break;\n                                            case 'byId':\n                                                {\n                                                    const keys = await DKMS.generateSsiKeys(arweave);\n                                                    const key = await DKMS.encryptData(keys.privateKey, publicEncryption);\n                                                    input = {\n                                                        function: 'registerKey',\n                                                        id: specificId,\n                                                        key: key\n                                                    };\n                                                }\n                                                break;                                \n                                            default:\n                                                throw new Error('Wrong selection.');\n                                        }\n                                        const fee = arweave.ar.arToWinston('0.1');\n                                        \n                                        if( window.confirm(\"The fee to create a new key in your permawallet is 0.1 $AR, paid to the AYJA profit sharing community. Click OK to proceed.\")) {\n                                            if( pscMember === account.ssi ){\n                                                alert(`You got randomly selected as the PSC winner for this transaction - lucky you! That means no fee.`);\n                                                tx = await SmartWeave.interactWrite(\n                                                    arweave,\n                                                    keyfile,\n                                                    account.wallet.toString(),\n                                                    input        \n                                                ).catch( err => { throw err });\n                                            } else{\n                                                tx = await SmartWeave.interactWrite(\n                                                    arweave,\n                                                    keyfile,\n                                                    account.wallet.toString(),\n                                                    input,\n                                                    [],\n                                                    pscMember.toString(),\n                                                    fee.toString()\n                                                ).catch( err => { throw err });\n                                            }                                       \n                                        }\n                                    }\n                                    if( tx === undefined ){\n                                        alert(`Transaction still processing.`)\n                                    } else{\n                                        alert(`Your transaction was successful! Its ID is: ${ tx }`);\n                                        setSendKey('sent');\n                                        setNewKeyButton('button');\n                                    }\n                                } catch (error) {\n                                    alert(error)\n                                }                            \n                            }}\n                        /></li>\n                        <li><input type=\"reset\" value=\"Reset\" onClick={ _event => { setKeyId(\"\"); setSendKey('send'); setNewKeyButton('button primary') }}/></li>\n                    </ul>\n                </form>\n            </section>\n            <section style={{ width: \"100%\", marginTop: \"4%\" }}>\n                <h4 class=\"major\">Update your SSI Travel Rule Passport</h4>\n                <form>\n                    <div class=\"fields\">\n                        <div class=\"field half\">\n                            <label>First name</label>\n                            <input type=\"text\" onChange={ handleFirstName } />\n                        </div>\n                        <div class=\"field half\">\n                            <label>Last name</label>\n                            <input type=\"text\" onChange={ handleLastName } />\n                        </div>\n                    </div>\n                    <section style={{width:'100%', marginBottom:\"3%\"}}>\n                        <h4>Residential address</h4>\n                        <div class=\"fields\">\n                            <input type=\"text\" placeholder=\"Street name\" onChange={ handleStreetName } />\n                        </div>\n                    </section>\n                    <div class=\"fields\">\n                        <div class=\"field half\">\n                            <input type=\"text\" placeholder=\"Building number\" onChange={ handleBuildingNumber } />\n                        </div>\n                        <div class=\"field half\">\n                            <select onChange={ handleCountry }>\n                                <option value=\"\">Select country of residence</option>\n                                <option value=\"Argentina\">Argentina</option>\n                                <option value=\"Denmark\">Denmark</option>\n                                <option value=\"Singapore\">Singapore</option>\n                                <option value=\"United Kingdom\">United Kingdom</option>\n                            </select>\n                        </div>\n                    </div>\n                    <ul class=\"actions\">\n                        <li><input type=\"button\" class={ savePassportButton } value={ savePassportLegend }\n                                onClick={ () => {\n                                    setIvms101({\n                                        firstName: firstName,\n                                        lastName: lastName,\n                                        streetName: streetName,\n                                        buildingNumber: buildingNumber,\n                                        country: country\n                                    });\n                                    setSavePassportLegend('Saved');\n                                    setSavePassportButton('button');\n                                }}\n                                />\n                        </li>\n                        <li><input type=\"button\" class={ updatePassportButton } value={ updatePassportLegend }\n                                onClick={ async() => {\n                                    try {\n                                        if( keyfile === '' &&  arconnect === '' ){\n                                            throw new Error(`You have to connect with ArConnect or your keyfile.`)\n                                        }\n                                        if( savePassportLegend === 'save' ){\n                                            throw new Error('You have to fill up and save the SSI Travel Rule Passport information first.')\n                                        }\n\n                                        // Travel Rule Passport\n                                        const trSsiKeys = await DKMS.generateSsiKeys(arweave);\n                                        const encryptedTrPassport = await DKMS.encryptData(ivms101, trSsiKeys.publicEncryption);\n                                        alert(`This is your encrypted SSI Travel Rule Passport: ${ encryptedTrPassport }`);\n\n                                        const fee = arweave.ar.arToWinston('0.1');\n                                        \n                                        let ssiTravelRulePrivate;\n                                        let input;\n                                        let tx;\n                                        if( arconnect !== '' ){\n                                            if( window.confirm(\"The fee to update your SSI Travel Rule Passport is 0.1 $AR, paid to the AYJA profit sharing community. Click OK to proceed.\")) {\n                                                ssiTravelRulePrivate = await DKMS.encryptKey(arconnect, trSsiKeys.privateKey);\n                                                input = {\n                                                    function: 'trp',\n                                                    trmessage: encryptedTrPassport,\n                                                    trkey: ssiTravelRulePrivate\n                                                };\n                                                \n                                                if( pscMember === account.ssi ){\n                                                    alert(`You got randomly selected as the PSC winner for this transaction - lucky you! That means no fee.`);\n                                                    tx = await arweave.createTransaction(\n                                                        { \n                                                            data: Math.random().toString().slice(-4) \n                                                        }\n                                                    ).catch( err => { throw err });\n                                                } else{\n                                                    tx = await arweave.createTransaction(\n                                                        {\n                                                            data: Math.random().toString().slice(-4),\n                                                            target: pscMember.toString(),\n                                                            quantity: fee.toString(),\n                                                        }\n                                                    ).catch( err => { throw err });\n                                                }\n                                                tx.addTag('Dapp', 'tyron');\n                                                tx.addTag('App-Name', 'SmartWeaveAction');\n                                                tx.addTag('App-Version', '0.3.0');\n                                                tx.addTag('Contract', account.wallet.toString());\n                                                tx.addTag('Input', JSON.stringify(input));\n        \n                                                await arweave.transactions.sign(tx).catch( err => { throw err });\n                                                await arweave.transactions.post(tx).catch( err => { throw err });\n                                                tx = tx.id;                                  \n                                            }\n                                        } else{\n                                            if(window.confirm(\"The fee to update an address in your SSI is 0.1 $AR, paid to the AYJA profit sharing community. Click OK to proceed.\")) {\n                                                const publicEncryption = await DKMS.generatePublicEncryption(keyfile);\n                                                ssiTravelRulePrivate = await DKMS.encryptData(trSsiKeys.privateKey, publicEncryption);\n                                                input = {\n                                                    function: 'trp',\n                                                    trmessage: encryptedTrPassport,\n                                                    trkey: ssiTravelRulePrivate\n                                                };\n\n                                                if( pscMember === account.ssi ){\n                                                    alert(`You got randomly selected as the PSC winner for this transaction - lucky you! That means no fee.`)\n                                                    tx = await SmartWeave.interactWrite(arweave, keyfile, account.wallet.toString(), input).catch( err => { throw err });\n                                                } else{\n                                                    tx = await SmartWeave.interactWrite(arweave, keyfile, account.wallet.toString(), input, [], pscMember, fee).catch( err => { throw err });\n                                                }                                       \n                                            }\n                                        }\n                                        if( tx === undefined ){\n                                            alert(`Transaction rejected.`)\n                                        } else{\n                                            alert(`Your transaction was successful! Its ID is: ${ tx }`);\n                                            setUpdatePassportLegend('updated');\n                                            setUpdatePassportButton('button');\n                                        }                            \n                                    } catch (error) {\n                                        alert(error)\n                                    }\n                                }}\n                            /></li>\n                        <li><input type=\"reset\" value=\"Reset\" onClick={ _event => { setIvms101(emptyMessage); setSavePassportLegend('save'); setSavePassportButton('button primary'); setUpdatePassportLegend('update'); setUpdatePassportButton('button primary') }}/></li>  \n                    </ul>\n                </form>\n            </section>\n        </div>\n\t);\n}\n\nexport default Settings;\n","export { default as Header } from \"./header\";\nexport { default as Footer } from \"./footer\";\nexport { default as Home } from \"./home\";\nexport { default as Domains } from \"./domains\";\nexport { default as Contact } from \"./contact\";\nexport { default as Profile } from \"./profile\";\nexport { default as ConnectWallet } from \"./connectWallet\";\nexport { default as CreateAccount } from \"./createAccount\";\nexport { default as Settings } from \"./settings\";\n\nexport const permawalletTemplateID = \"_mugCanBhT46JlhYj_mPMLY8dv8frTAEoJ3SW2QOAtY\";\nexport const permawalletSourceID = \"4n85EvQtVpt-hwacmqUt0-tABNFOPW1C1PluRXyfscI\";\n\nexport const ayjaPstStateID = \"0QhUKXU_M_jiOc7mT6VvdX8RkbHohx8S627oDDPdnBE\";\nexport const ayjaPstSourceID = \"uwIDMyc4zslyxTR3BEd5Eco6aSMF5pHi8rgXr4mpOPA\";\n","import './styles/css/main.css';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Header, Footer, Home, Domains, Contact} from \"./components\";\n\nfunction App() {\n\treturn(\n\t\t<div id=\"wrapper\">\n\t\t\t<Router>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" ><Home /></Route>\n\t\t\t\t\t<Route exact path=\"/domains\" ><Domains /></Route>\n\t\t\t\t\t<Route exact path=\"/contact\" ><Contact /></Route>\n\t\t\t\t\t<Route><Home/></Route>\n\t\t\t\t</Switch>\n\t\t\t\t<Footer />\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/main.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}